name: Build, Test, Package and Push

 # Controls when the action will run. 
 on:
   # Triggers the workflow on pull request events and merges/pushes to main
   push:
     branches:
       - '**'
     tags-ignore:
       - '**'
   schedule:
     # Daily 5am australian/brisbane time
     # - cron: '19 0 * * *'
     # Allows you to run this workflow manually from the Actions tab
   workflow_dispatch:

 jobs:
   build:
     runs-on: ubuntu-20.04
     steps:
       - uses: actions/checkout@v2
         with:
           fetch-depth: 0 # all

       - name: Setup .NET
         uses: actions/setup-dotnet@v1
         with:
           dotnet-version: 6.0.x

       - name: Install OctoVersion
         run: |
           dotnet new tool-manifest
           dotnet tool install OctoVersion.Tool
     
       - name: Calculate Version
         id: calculate_version
         shell: bash
         run: |
            dotnet tool run octoversion --CurrentBranch=${{ github.head_ref || github.ref }} --Patch ${{ github.run_number }} --DetectEnvironment true
            echo $OCTOVERSION_FullSemVer

       - name: Build üèó
         id: build
         shell: bash
         run: |
           dotnet restore src/Hyponome.sln
           dotnet build src/Hyponome.sln
           dotnet publish src/Hyponome.sln -o ../../publish
           zip -r hyponome.web.${{ steps.calculate_version.outputs.octoversion_fullsemver }}.zip ../../publish

       - name: GitHub Tag üè∑
         id: github-tag
         uses: actions/github-script@v3
         if: github.actor != 'dependabot[bot]' && github.actor != 'dependabot-preview[bot]' && github.event_name != 'schedule' && steps.build.outputs.prerelease_tag == ''
         with:
           github-token: ${{ secrets.GITHUB_TOKEN }}
           script: |
             github.git.createRef({
               owner: context.repo.owner,
               repo: context.repo.repo,
               ref: "refs/tags/${{ steps.build.outputs.semver }}",
               sha: context.sha
             })
             
       - name: üêô Install Octopus CLI
         uses: OctopusDeploy/install-octopus-cli-action@v1.1.8
         with:
           version: latest
          
       - name: üêô Push a package to Octopus Deploy
         uses: OctopusDeploy/push-package-action@v1.1.1
         with:
           api_key: ${{ secrets.OCTOPUS_API_KEY }}
           packages: hyponome.web.${{ steps.calculate_version.outputs.octoversion_fullsemver }}.zip
           server: ${{ secrets.OCTOPUS_SERVER }}

       - name: üêô Create a release in Octopus Deploy
         uses: OctopusDeploy/create-release-action@v1.1.1
         with:
           api_key: ${{ secrets.OCTOPUS_API_KEY }}
           project: 'Water Tank Sensor'
           server: ${{ secrets.OCTOPUS_SERVER }}
           release_number: ${{ steps.calculate_version.outputs.octoversion_fullsemver }}
           packages: hyponome.web.${{ steps.calculate_version.outputs.octoversion_fullsemver }}.zip
